//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/FluentBuilder version 0.4.9.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
using System;
using System.Collections;
using System.Collections.Generic;
using FluentBuilderGeneratorTests.FluentBuilder;
using FluentBuilderGeneratorTests.DTO;

namespace FluentBuilderGeneratorTests.DTO
{
    public partial class ThingWithParameterizedConstructorBuilder : Builder<FluentBuilderGeneratorTests.DTO.ThingWithParameterizedConstructor>
    {
        private bool _xIsSet;
        private Lazy<int> _x = new Lazy<int>(() => default(int));
        public ThingWithParameterizedConstructorBuilder WithX(int value) => WithX(() => value);
        public ThingWithParameterizedConstructorBuilder WithX(Func<int> func)
        {
            _x = new Lazy<int>(func);
            _xIsSet = true;
            return this;
        }
        public ThingWithParameterizedConstructorBuilder WithoutX()
        {
            WithX(() => default(int));
            _xIsSet = false;
            return this;
        }


        public override ThingWithParameterizedConstructor Build(bool useObjectInitializer = true)
        {
            if (Object?.IsValueCreated != true)
            {
                Object = new Lazy<ThingWithParameterizedConstructor>(() =>
                {
                    ThingWithParameterizedConstructor instance;
                    if (useObjectInitializer)
                    {
                        instance = new ThingWithParameterizedConstructor
                        {
                            X = _x.Value
                        };
                        return instance;
                    }

                    instance = new ThingWithParameterizedConstructor();
                    if (_xIsSet) { instance.X = _x.Value; }
                    return instance;
                });
            }

            PostBuild(Object.Value);

            return Object.Value;
        }

        public static ThingWithParameterizedConstructor Default() => new ThingWithParameterizedConstructor();

    }
}
#nullable disable