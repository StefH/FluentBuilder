//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/FluentBuilder version 0.7.1.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
using System;
using System.Collections;
using System.Collections.Generic;
using FluentBuilderGeneratorTests.FluentBuilder;
using AbcTest.OtherNamespace;

namespace AbcTest.OtherNamespace
{
    public partial class IListClassOnOtherNamespaceBuilder : Builder<IList<AbcTest.OtherNamespace.ClassOnOtherNamespace>>
    {
        private readonly Lazy<List<AbcTest.OtherNamespace.ClassOnOtherNamespace>> _list = new Lazy<List<AbcTest.OtherNamespace.ClassOnOtherNamespace>>(() => new List<AbcTest.OtherNamespace.ClassOnOtherNamespace>());
        public IListClassOnOtherNamespaceBuilder Add(ClassOnOtherNamespace item) => Add(() => item);
        public IListClassOnOtherNamespaceBuilder Add(Func<ClassOnOtherNamespace> func)
        {
            _list.Value.Add(func());
            return this;
        }
        public IListClassOnOtherNamespaceBuilder Add(Action<AbcTest.OtherNamespace.ClassOnOtherNamespaceBuilder> action, bool useObjectInitializer = true)
        {
            var builder = new AbcTest.OtherNamespace.ClassOnOtherNamespaceBuilder();
            action(builder);
            Add(() => builder.Build(useObjectInitializer));
            return this;
        }


        public override IList<AbcTest.OtherNamespace.ClassOnOtherNamespace> Build() => Build(true);

        public override IList<AbcTest.OtherNamespace.ClassOnOtherNamespace> Build(bool useObjectInitializer)
        {
            if (Instance?.IsValueCreated != true)
            {
                Instance = new Lazy<IList<AbcTest.OtherNamespace.ClassOnOtherNamespace>>(() =>
                {
                    return _list.Value;
                });
            }

            PostBuild(Instance.Value);

            return Instance.Value;
        }

    }
}
#nullable disable