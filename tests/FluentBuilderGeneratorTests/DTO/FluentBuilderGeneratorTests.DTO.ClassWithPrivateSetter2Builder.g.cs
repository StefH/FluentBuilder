//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/FluentBuilder version 0.9.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using FluentBuilderGeneratorTests.FluentBuilder;
using FluentBuilderGeneratorTests.DTO;

namespace FluentBuilderGeneratorTests.DTO
{
    public static partial class ClassWithPrivateSetter2BuilderExtensions
    {
        public static ClassWithPrivateSetter2Builder AsBuilder(this FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2 instance)
        {
            return new ClassWithPrivateSetter2Builder().UsingInstance(instance);
        }
    }

    public partial class ClassWithPrivateSetter2Builder : Builder<FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2>
    {
        private bool _value2IsSet;
        private Lazy<int> _value2 = new Lazy<int>(() => default(int));
        public ClassWithPrivateSetter2Builder WithValue2(int value) => WithValue2(() => value);
        public ClassWithPrivateSetter2Builder WithValue2(Func<int> func)
        {
            _value2 = new Lazy<int>(func);
            _value2IsSet = true;
            return this;
        }

        private bool _Constructor1164815551_IsSet;
        private Lazy<FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2> _Constructor1164815551 = new Lazy<FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2>(() => new FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2());
        public ClassWithPrivateSetter2Builder UsingConstructor()
        {
            _Constructor1164815551 = new Lazy<FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2>(() =>
            {
                return new FluentBuilderGeneratorTests.DTO.ClassWithPrivateSetter2
                (

                );
            });
            _Constructor1164815551_IsSet = true;

            return this;
        }


        public ClassWithPrivateSetter2Builder UsingInstance(ClassWithPrivateSetter2 value) => UsingInstance(() => value);

        public ClassWithPrivateSetter2Builder UsingInstance(Func<ClassWithPrivateSetter2> func)
        {
            Instance = new Lazy<ClassWithPrivateSetter2>(func);
            return this;
        }

        public override ClassWithPrivateSetter2 Build() => Build(true);

        public override ClassWithPrivateSetter2 Build(bool useObjectInitializer)
        {
            if (Instance is null)
            {
                Instance = new Lazy<ClassWithPrivateSetter2>(() =>
                {
                    ClassWithPrivateSetter2 instance;
                    if (useObjectInitializer)
                    {
                        instance = new ClassWithPrivateSetter2
                        {
                            Value2 = _value2.Value
                        };

                        return instance;
                    }

                    if (_Constructor1164815551_IsSet) { instance = _Constructor1164815551.Value; }
                    else { instance = Default(); }

                    return instance;
                });
            }

            if (_value2IsSet) { Instance.Value.Value2 = _value2.Value; }

            PostBuild(Instance.Value);

            return Instance.Value;
        }

        public static ClassWithPrivateSetter2 Default() => new ClassWithPrivateSetter2();

    }
}
#nullable disable