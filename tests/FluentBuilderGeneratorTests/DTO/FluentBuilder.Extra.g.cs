//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/FluentBuilder version 0.5.1.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
using System;

namespace FluentBuilder
{
    [AttributeUsage(AttributeTargets.Class)]
    internal sealed class AutoGenerateBuilderAttribute : Attribute
    {
        public Type? Type { get; }
        public bool HandleBaseClasses { get; }
        // public FluentBuilderAccessibility Accessibility { get; }

        public AutoGenerateBuilderAttribute() : this(null, true)
        {
        }

        public AutoGenerateBuilderAttribute(bool handleBaseClasses) : this(null, handleBaseClasses)
        {
        }

        public AutoGenerateBuilderAttribute(Type? type) : this(type, true)
        {
        }

        public AutoGenerateBuilderAttribute(Type? type, bool handleBaseClasses)
        {
            Type = type;
            HandleBaseClasses = handleBaseClasses;
            // Accessibility = accessibility;
        }
    }

    [AttributeUsage(AttributeTargets.Property)]
    internal sealed class FluentBuilderIgnoreAttribute : Attribute
    {
    }

    // Based on Microsoft.CodeAnalysis.Accessibility
    /*[Flags]
    internal enum FluentBuilderAccessibility
    {
        All = 0,
        Private = 1,
        // ProtectedAndInternal = 2,
        // ProtectedAndFriend = ProtectedAndInternal,
        // Protected = 3,
        // Internal = 4,
        // Friend = Internal,
        // ProtectedOrInternal = 5,
        // ProtectedOrFriend = ProtectedOrInternal,
        Public = 6
    }*/
}
#nullable disable